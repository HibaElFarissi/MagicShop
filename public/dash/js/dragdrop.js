var sortable=(function(){'use strict';function addData(element,key,value){if(value===undefined){return element&&element.h5s&&element.h5s.data&&element.h5s.data[key];}
else{element.h5s=element.h5s||{};element.h5s.data=element.h5s.data||{};element.h5s.data[key]=value;}}
function removeData(element){if(element.h5s){delete element.h5s.data;}}
var filter=(function(nodes,selector){if(!(nodes instanceof NodeList||nodes instanceof HTMLCollection||nodes instanceof Array)){throw new Error('You must provide a nodeList/HTMLCollection/Array of elements to be filtered.');}
if(typeof selector!=='string'){return Array.from(nodes);}
return Array.from(nodes).filter(function(item){return item.nodeType===1&&item.matches(selector);});});var stores=new Map();var Store=(function(){function Store(){this._config=new Map();this._placeholder=undefined;this._data=new Map();}
Object.defineProperty(Store.prototype,"config",{get:function(){var config={};this._config.forEach(function(value,key){config[key]=value;});return config;},set:function(config){if(typeof config!=='object'){throw new Error('You must provide a valid configuration object to the config setter.');}
var mergedConfig=Object.assign({},config);this._config=new Map(Object.entries(mergedConfig));},enumerable:false,configurable:true});Store.prototype.setConfig=function(key,value){if(!this._config.has(key)){throw new Error("Trying to set invalid configuration item: "+key);}
this._config.set(key,value);};Store.prototype.getConfig=function(key){if(!this._config.has(key)){throw new Error("Invalid configuration item requested: "+key);}
return this._config.get(key);};Object.defineProperty(Store.prototype,"placeholder",{get:function(){return this._placeholder;},set:function(placeholder){if(!(placeholder instanceof HTMLElement)&&placeholder!==null){throw new Error('A placeholder must be an html element or null.');}
this._placeholder=placeholder;},enumerable:false,configurable:true});Store.prototype.setData=function(key,value){if(typeof key!=='string'){throw new Error('The key must be a string.');}
this._data.set(key,value);};Store.prototype.getData=function(key){if(typeof key!=='string'){throw new Error('The key must be a string.');}
return this._data.get(key);};Store.prototype.deleteData=function(key){if(typeof key!=='string'){throw new Error('The key must be a string.');}
return this._data.delete(key);};return Store;}());var store=(function(sortableElement){if(!(sortableElement instanceof HTMLElement)){throw new Error('Please provide a sortable to the store function.');}
if(!stores.has(sortableElement)){stores.set(sortableElement,new Store());}
return stores.get(sortableElement);});function addEventListener(element,eventName,callback){if(element instanceof Array){for(var i=0;i<element.length;++i){addEventListener(element[i],eventName,callback);}
return;}
element.addEventListener(eventName,callback);store(element).setData("event"+eventName,callback);}
function removeEventListener(element,eventName){if(element instanceof Array){for(var i=0;i<element.length;++i){removeEventListener(element[i],eventName);}
return;}
element.removeEventListener(eventName,store(element).getData("event"+eventName));store(element).deleteData("event"+eventName);}
function addAttribute(element,attribute,value){if(element instanceof Array){for(var i=0;i<element.length;++i){addAttribute(element[i],attribute,value);}
return;}
element.setAttribute(attribute,value);}
function removeAttribute(element,attribute){if(element instanceof Array){for(var i=0;i<element.length;++i){removeAttribute(element[i],attribute);}
return;}
element.removeAttribute(attribute);}
var offset=(function(element){if(!element.parentElement||element.getClientRects().length===0){throw new Error('target element must be part of the dom');}
var rect=element.getClientRects()[0];return{left:rect.left+window.pageXOffset,right:rect.right+window.pageXOffset,top:rect.top+window.pageYOffset,bottom:rect.bottom+window.pageYOffset};});var debounce=(function(func,wait){if(wait===void 0){wait=0;}
var timeout;return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}
clearTimeout(timeout);timeout=setTimeout(function(){func.apply(void 0,args);},wait);};});var getIndex=(function(element,elementList){if(!(element instanceof HTMLElement)||!(elementList instanceof NodeList||elementList instanceof HTMLCollection||elementList instanceof Array)){throw new Error('You must provide an element and a list of elements.');}
return Array.from(elementList).indexOf(element);});var isInDom=(function(element){if(!(element instanceof HTMLElement)){throw new Error('Element is not a node element.');}
return element.parentNode!==null;});var insertNode=function(referenceNode,newElement,position){if(!(referenceNode instanceof HTMLElement)||!(referenceNode.parentElement instanceof HTMLElement)){throw new Error('target and element must be a node');}
referenceNode.parentElement.insertBefore(newElement,(position==='before'?referenceNode:referenceNode.nextElementSibling));};var insertBefore=function(target,element){return insertNode(target,element,'before');};var insertAfter=function(target,element){return insertNode(target,element,'after');};var serialize=(function(sortableContainer,customItemSerializer,customContainerSerializer){if(customItemSerializer===void 0){customItemSerializer=function(serializedItem,sortableContainer){return serializedItem;};}
if(customContainerSerializer===void 0){customContainerSerializer=function(serializedContainer){return serializedContainer;};}
if(!(sortableContainer instanceof HTMLElement)||!sortableContainer.isSortable===true){throw new Error('You need to provide a sortableContainer to be serialized.');}
if(typeof customItemSerializer!=='function'||typeof customContainerSerializer!=='function'){throw new Error('You need to provide a valid serializer for items and the container.');}
var options=addData(sortableContainer,'opts');var item=options.items;var items=filter(sortableContainer.children,item);var serializedItems=items.map(function(item){return{parent:sortableContainer,node:item,html:item.outerHTML,index:getIndex(item,items)};});var container={node:sortableContainer,itemCount:serializedItems.length};return{container:customContainerSerializer(container),items:serializedItems.map(function(item){return customItemSerializer(item,sortableContainer);})};});var makePlaceholder=(function(sortableElement,placeholder,placeholderClass){var _a;if(placeholderClass===void 0){placeholderClass='sortable-placeholder';}
if(!(sortableElement instanceof HTMLElement)){throw new Error('You must provide a valid element as a sortable.');}
if(!(placeholder instanceof HTMLElement)&&placeholder!==undefined){throw new Error('You must provide a valid element as a placeholder or set ot to undefined.');}
if(placeholder===undefined){if(['UL','OL'].includes(sortableElement.tagName)){placeholder=document.createElement('li');}
else if(['TABLE','TBODY'].includes(sortableElement.tagName)){placeholder=document.createElement('tr');placeholder.innerHTML='<td colspan="100"></td>';}
else{placeholder=document.createElement('div');}}
if(typeof placeholderClass==='string'){(_a=placeholder.classList).add.apply(_a,placeholderClass.split(' '));}
return placeholder;});var getElementHeight=(function(element){if(!(element instanceof HTMLElement)){throw new Error('You must provide a valid dom element');}
var style=window.getComputedStyle(element);if(style.getPropertyValue('box-sizing')==='border-box'){return parseInt(style.getPropertyValue('height'),10);}
return['height','padding-top','padding-bottom'].map(function(key){var int=parseInt(style.getPropertyValue(key),10);return isNaN(int)?0:int;}).reduce(function(sum,value){return sum+value;});});var getElementWidth=(function(element){if(!(element instanceof HTMLElement)){throw new Error('You must provide a valid dom element');}
var style=window.getComputedStyle(element);return['width','padding-left','padding-right'].map(function(key){var int=parseInt(style.getPropertyValue(key),10);return isNaN(int)?0:int;}).reduce(function(sum,value){return sum+value;});});var getHandles=(function(items,selector){if(!(items instanceof Array)){throw new Error('You must provide a Array of HTMLElements to be filtered.');}
if(typeof selector!=='string'){return items;}
return items.filter(function(item){return item.querySelector(selector)instanceof HTMLElement||(item.shadowRoot&&item.shadowRoot.querySelector(selector)instanceof HTMLElement);}).map(function(item){return item.querySelector(selector)||(item.shadowRoot&&item.shadowRoot.querySelector(selector));});});var getEventTarget=(function(event){return(event.composedPath&&event.composedPath()[0])||event.target;});var defaultDragImage=function(draggedElement,elementOffset,event){return{element:draggedElement,posX:event.pageX-elementOffset.left,posY:event.pageY-elementOffset.top};};var setDragImage=(function(event,draggedElement,customDragImage){if(!(event instanceof Event)){throw new Error('setDragImage requires a DragEvent as the first argument.');}
if(!(draggedElement instanceof HTMLElement)){throw new Error('setDragImage requires the dragged element as the second argument.');}
if(!customDragImage){customDragImage=defaultDragImage;}
if(event.dataTransfer&&event.dataTransfer.setDragImage){var elementOffset=offset(draggedElement);var dragImage=customDragImage(draggedElement,elementOffset,event);if(!(dragImage.element instanceof HTMLElement)||typeof dragImage.posX!=='number'||typeof dragImage.posY!=='number'){throw new Error('The customDragImage function you provided must return and object with the properties element[string], posX[integer], posY[integer].');}
event.dataTransfer.effectAllowed='copyMove';event.dataTransfer.setData('text/plain',getEventTarget(event).id);event.dataTransfer.setDragImage(dragImage.element,dragImage.posX,dragImage.posY);}});var listsConnected=(function(destination,origin){if(destination.isSortable===true){var acceptFrom=store(destination).getConfig('acceptFrom');if(acceptFrom!==null&&acceptFrom!==false&&typeof acceptFrom!=='string'){throw new Error('HTML5Sortable: Wrong argument, "acceptFrom" must be "null", "false", or a valid selector string.');}
if(acceptFrom!==null){return acceptFrom!==false&&acceptFrom.split(',').filter(function(sel){return sel.length>0&&origin.matches(sel);}).length>0;}
if(destination===origin){return true;}
if(store(destination).getConfig('connectWith')!==undefined&&store(destination).getConfig('connectWith')!==null){return store(destination).getConfig('connectWith')===store(origin).getConfig('connectWith');}}
return false;});var defaultConfiguration={items:null,connectWith:null,disableIEFix:null,acceptFrom:null,copy:false,placeholder:null,placeholderClass:'sortable-placeholder',draggingClass:'sortable-dragging',hoverClass:false,dropTargetContainerClass:false,debounce:0,throttleTime:100,maxItems:0,itemSerializer:undefined,containerSerializer:undefined,customDragImage:null,orientation:'vertical'};function throttle(fn,threshold){var _this=this;if(threshold===void 0){threshold=250;}
if(typeof fn!=='function'){throw new Error('You must provide a function as the first argument for throttle.');}
if(typeof threshold!=='number'){throw new Error('You must provide a number as the second argument for throttle.');}
var lastEventTimestamp=null;return function(){var args=[];for(var _i=0;_i<arguments.length;_i++){args[_i]=arguments[_i];}
var now=Date.now();if(lastEventTimestamp===null||now-lastEventTimestamp>=threshold){lastEventTimestamp=now;fn.apply(_this,args);}};}
var enableHoverClass=(function(sortableContainer,enable){if(typeof store(sortableContainer).getConfig('hoverClass')==='string'){var hoverClasses_1=store(sortableContainer).getConfig('hoverClass').split(' ');if(enable===true){addEventListener(sortableContainer,'mousemove',throttle(function(event){if(event.buttons===0){filter(sortableContainer.children,store(sortableContainer).getConfig('items')).forEach(function(item){var _a,_b;if(item===event.target||item.contains(event.target)){(_a=item.classList).add.apply(_a,hoverClasses_1);}
else{(_b=item.classList).remove.apply(_b,hoverClasses_1);}});}},store(sortableContainer).getConfig('throttleTime')));addEventListener(sortableContainer,'mouseleave',function(){filter(sortableContainer.children,store(sortableContainer).getConfig('items')).forEach(function(item){var _a;(_a=item.classList).remove.apply(_a,hoverClasses_1);});});}
else{removeEventListener(sortableContainer,'mousemove');removeEventListener(sortableContainer,'mouseleave');}}});var dragging;var draggingHeight;var draggingWidth;var originContainer;var originIndex;var originElementIndex;var originItemsBeforeUpdate;var previousContainer;var destinationItemsBeforeUpdate;var removeItemEvents=function(items){removeEventListener(items,'dragstart');removeEventListener(items,'dragend');removeEventListener(items,'dragover');removeEventListener(items,'dragenter');removeEventListener(items,'drop');removeEventListener(items,'mouseenter');removeEventListener(items,'mouseleave');};var removeContainerEvents=function(originContainer,previousContainer){if(originContainer){removeEventListener(originContainer,'dragleave');}
if(previousContainer&&(previousContainer!==originContainer)){removeEventListener(previousContainer,'dragleave');}};var getDragging=function(draggedItem,sortable){var ditem=draggedItem;if(store(sortable).getConfig('copy')===true){ditem=draggedItem.cloneNode(true);addAttribute(ditem,'aria-copied','true');draggedItem.parentElement.appendChild(ditem);ditem.style.display='none';ditem.oldDisplay=draggedItem.style.display;}
return ditem;};var removeSortableData=function(sortable){removeData(sortable);removeAttribute(sortable,'aria-dropeffect');};var removeItemData=function(items){removeAttribute(items,'aria-grabbed');removeAttribute(items,'aria-copied');removeAttribute(items,'draggable');removeAttribute(items,'role');};function findSortable(element,event){if(event.composedPath){return event.composedPath().find(function(el){return el.isSortable;});}
while(element.isSortable!==true){element=element.parentElement;}
return element;}
function findDragElement(sortableElement,element){var options=addData(sortableElement,'opts');var items=filter(sortableElement.children,options.items);var itemlist=items.filter(function(ele){return ele.contains(element)||(ele.shadowRoot&&ele.shadowRoot.contains(element));});return itemlist.length>0?itemlist[0]:element;}
var destroySortable=function(sortableElement){var opts=addData(sortableElement,'opts')||{};var items=filter(sortableElement.children,opts.items);var handles=getHandles(items,opts.handle);enableHoverClass(sortableElement,false);removeEventListener(sortableElement,'dragover');removeEventListener(sortableElement,'dragenter');removeEventListener(sortableElement,'dragstart');removeEventListener(sortableElement,'dragend');removeEventListener(sortableElement,'drop');removeSortableData(sortableElement);removeEventListener(handles,'mousedown');removeItemEvents(items);removeItemData(items);removeContainerEvents(originContainer,previousContainer);sortableElement.isSortable=false;};var enableSortable=function(sortableElement){var opts=addData(sortableElement,'opts');var items=filter(sortableElement.children,opts.items);var handles=getHandles(items,opts.handle);addAttribute(sortableElement,'aria-dropeffect','move');addData(sortableElement,'_disabled','false');addAttribute(handles,'draggable','true');enableHoverClass(sortableElement,true);if(opts.disableIEFix===false){var spanEl=(document||window.document).createElement('span');if(typeof spanEl.dragDrop==='function'){addEventListener(handles,'mousedown',function(){if(items.indexOf(this)!==-1){this.dragDrop();}
else{var parent=this.parentElement;while(items.indexOf(parent)===-1){parent=parent.parentElement;}
parent.dragDrop();}});}}};var disableSortable=function(sortableElement){var opts=addData(sortableElement,'opts');var items=filter(sortableElement.children,opts.items);var handles=getHandles(items,opts.handle);addAttribute(sortableElement,'aria-dropeffect','none');addData(sortableElement,'_disabled','true');addAttribute(handles,'draggable','false');removeEventListener(handles,'mousedown');enableHoverClass(sortableElement,false);};var reloadSortable=function(sortableElement){var opts=addData(sortableElement,'opts');var items=filter(sortableElement.children,opts.items);var handles=getHandles(items,opts.handle);addData(sortableElement,'_disabled','false');removeItemEvents(items);removeContainerEvents(originContainer,previousContainer);removeEventListener(handles,'mousedown');removeEventListener(sortableElement,'dragover');removeEventListener(sortableElement,'dragenter');removeEventListener(sortableElement,'drop');};function sortable(sortableElements,options){var method=String(options);options=options||{};if(typeof sortableElements==='string'){sortableElements=document.querySelectorAll(sortableElements);}
if(sortableElements instanceof HTMLElement){sortableElements=[sortableElements];}
sortableElements=Array.prototype.slice.call(sortableElements);if(/serialize/.test(method)){return sortableElements.map(function(sortableContainer){var opts=addData(sortableContainer,'opts');return serialize(sortableContainer,opts.itemSerializer,opts.containerSerializer);});}
sortableElements.forEach(function(sortableElement){if(/enable|disable|destroy/.test(method)){return sortable[method](sortableElement);}
['connectWith','disableIEFix'].forEach(function(configKey){if(Object.prototype.hasOwnProperty.call(options,configKey)&&options[configKey]!==null){console.warn("HTML5Sortable: You are using the deprecated configuration \""+configKey+"\". This will be removed in an upcoming version, make sure to migrate to the new options when updating.");}});options=Object.assign({},defaultConfiguration,store(sortableElement).config,options);store(sortableElement).config=options;addData(sortableElement,'opts',options);sortableElement.isSortable=true;reloadSortable(sortableElement);var listItems=filter(sortableElement.children,options.items);var customPlaceholder;if(options.placeholder!==null&&options.placeholder!==undefined){var tempContainer=document.createElement(sortableElement.tagName);if(options.placeholder instanceof HTMLElement){tempContainer.appendChild(options.placeholder);}
else{tempContainer.innerHTML=options.placeholder;}
customPlaceholder=tempContainer.children[0];}
store(sortableElement).placeholder=makePlaceholder(sortableElement,customPlaceholder,options.placeholderClass);addData(sortableElement,'items',options.items);if(options.acceptFrom){addData(sortableElement,'acceptFrom',options.acceptFrom);}
else if(options.connectWith){addData(sortableElement,'connectWith',options.connectWith);}
enableSortable(sortableElement);addAttribute(listItems,'role','option');addAttribute(listItems,'aria-grabbed','false');addEventListener(sortableElement,'dragstart',function(e){var target=getEventTarget(e);if(target.isSortable===true){return;}
e.stopImmediatePropagation();if((options.handle&&!target.matches(options.handle))||target.getAttribute('draggable')==='false'){return;}
var sortableContainer=findSortable(target,e);var dragItem=findDragElement(sortableContainer,target);originItemsBeforeUpdate=filter(sortableContainer.children,options.items);originIndex=originItemsBeforeUpdate.indexOf(dragItem);originElementIndex=getIndex(dragItem,sortableContainer.children);originContainer=sortableContainer;setDragImage(e,dragItem,options.customDragImage);draggingHeight=getElementHeight(dragItem);draggingWidth=getElementWidth(dragItem);dragItem.classList.add(options.draggingClass);dragging=getDragging(dragItem,sortableContainer);addAttribute(dragging,'aria-grabbed','true');sortableContainer.dispatchEvent(new CustomEvent('sortstart',{detail:{origin:{elementIndex:originElementIndex,index:originIndex,container:originContainer},item:dragging,originalTarget:target}}));});addEventListener(sortableElement,'dragenter',function(e){var target=getEventTarget(e);var sortableContainer=findSortable(target,e);if(sortableContainer&&sortableContainer!==previousContainer){destinationItemsBeforeUpdate=filter(sortableContainer.children,addData(sortableContainer,'items')).filter(function(item){return item!==store(sortableElement).placeholder;});if(options.dropTargetContainerClass){sortableContainer.classList.add(options.dropTargetContainerClass);}
sortableContainer.dispatchEvent(new CustomEvent('sortenter',{detail:{origin:{elementIndex:originElementIndex,index:originIndex,container:originContainer},destination:{container:sortableContainer,itemsBeforeUpdate:destinationItemsBeforeUpdate},item:dragging,originalTarget:target}}));addEventListener(sortableContainer,'dragleave',function(e){var outTarget=e.relatedTarget||e.fromElement;if(!e.currentTarget.contains(outTarget)){if(options.dropTargetContainerClass){sortableContainer.classList.remove(options.dropTargetContainerClass);}
sortableContainer.dispatchEvent(new CustomEvent('sortleave',{detail:{origin:{elementIndex:originElementIndex,index:originIndex,container:sortableContainer},item:dragging,originalTarget:target}}));}});}
previousContainer=sortableContainer;});addEventListener(sortableElement,'dragend',function(e){if(!dragging){return;}
dragging.classList.remove(options.draggingClass);addAttribute(dragging,'aria-grabbed','false');if(dragging.getAttribute('aria-copied')==='true'&&addData(dragging,'dropped')!=='true'){dragging.remove();}
if(dragging.oldDisplay!==undefined){dragging.style.display=dragging.oldDisplay;delete dragging.oldDisplay;}
var visiblePlaceholder=Array.from(stores.values()).map(function(data){return data.placeholder;}).filter(function(placeholder){return placeholder instanceof HTMLElement;}).filter(isInDom)[0];if(visiblePlaceholder){visiblePlaceholder.remove();}
sortableElement.dispatchEvent(new CustomEvent('sortstop',{detail:{origin:{elementIndex:originElementIndex,index:originIndex,container:originContainer},item:dragging}}));previousContainer=null;dragging=null;draggingHeight=null;draggingWidth=null;});addEventListener(sortableElement,'drop',function(e){if(!listsConnected(sortableElement,dragging.parentElement)){return;}
e.preventDefault();e.stopPropagation();addData(dragging,'dropped','true');var visiblePlaceholder=Array.from(stores.values()).map(function(data){return data.placeholder;}).filter(function(placeholder){return placeholder instanceof HTMLElement;}).filter(isInDom)[0];if(visiblePlaceholder){visiblePlaceholder.replaceWith(dragging);if(dragging.oldDisplay!==undefined){dragging.style.display=dragging.oldDisplay;delete dragging.oldDisplay;}}
else{addData(dragging,'dropped','false');return;}
sortableElement.dispatchEvent(new CustomEvent('sortstop',{detail:{origin:{elementIndex:originElementIndex,index:originIndex,container:originContainer},item:dragging}}));var placeholder=store(sortableElement).placeholder;var originItems=filter(originContainer.children,options.items).filter(function(item){return item!==placeholder;});var destinationContainer=this.isSortable===true?this:this.parentElement;var destinationItems=filter(destinationContainer.children,addData(destinationContainer,'items')).filter(function(item){return item!==placeholder;});var destinationElementIndex=getIndex(dragging,Array.from(dragging.parentElement.children).filter(function(item){return item!==placeholder;}));var destinationIndex=getIndex(dragging,destinationItems);if(options.dropTargetContainerClass){destinationContainer.classList.remove(options.dropTargetContainerClass);}
if(originElementIndex!==destinationElementIndex||originContainer!==destinationContainer){sortableElement.dispatchEvent(new CustomEvent('sortupdate',{detail:{origin:{elementIndex:originElementIndex,index:originIndex,container:originContainer,itemsBeforeUpdate:originItemsBeforeUpdate,items:originItems},destination:{index:destinationIndex,elementIndex:destinationElementIndex,container:destinationContainer,itemsBeforeUpdate:destinationItemsBeforeUpdate,items:destinationItems},item:dragging}}));}});var debouncedDragOverEnter=debounce(function(sortableElement,element,pageX,pageY){if(!dragging){return;}
if(options.forcePlaceholderSize){store(sortableElement).placeholder.style.height=draggingHeight+'px';store(sortableElement).placeholder.style.width=draggingWidth+'px';}
if(Array.from(sortableElement.children).indexOf(element)>-1){var thisHeight=getElementHeight(element);var thisWidth=getElementWidth(element);var placeholderIndex=getIndex(store(sortableElement).placeholder,element.parentElement.children);var thisIndex=getIndex(element,element.parentElement.children);if(thisHeight>draggingHeight||thisWidth>draggingWidth){var deadZoneVertical=thisHeight-draggingHeight;var deadZoneHorizontal=thisWidth-draggingWidth;var offsetTop=offset(element).top;var offsetLeft=offset(element).left;if(placeholderIndex<thisIndex&&((options.orientation==='vertical'&&pageY<offsetTop)||(options.orientation==='horizontal'&&pageX<offsetLeft))){return;}
if(placeholderIndex>thisIndex&&((options.orientation==='vertical'&&pageY>offsetTop+thisHeight-deadZoneVertical)||(options.orientation==='horizontal'&&pageX>offsetLeft+thisWidth-deadZoneHorizontal))){return;}}
if(dragging.oldDisplay===undefined){dragging.oldDisplay=dragging.style.display;}
if(dragging.style.display!=='none'){dragging.style.display='none';}
var placeAfter=false;try{var elementMiddleVertical=offset(element).top+element.offsetHeight/2;var elementMiddleHorizontal=offset(element).left+element.offsetWidth/2;placeAfter=(options.orientation==='vertical'&&(pageY>=elementMiddleVertical))||(options.orientation==='horizontal'&&(pageX>=elementMiddleHorizontal));}
catch(e){placeAfter=placeholderIndex<thisIndex;}
if(placeAfter){insertAfter(element,store(sortableElement).placeholder);}
else{insertBefore(element,store(sortableElement).placeholder);}
Array.from(stores.values()).filter(function(data){return data.placeholder!==undefined;}).forEach(function(data){if(data.placeholder!==store(sortableElement).placeholder){data.placeholder.remove();}});}
else{var placeholders=Array.from(stores.values()).filter(function(data){return data.placeholder!==undefined;}).map(function(data){return data.placeholder;});if(placeholders.indexOf(element)===-1&&sortableElement===element&&!filter(element.children,options.items).length){placeholders.forEach(function(element){return element.remove();});element.appendChild(store(sortableElement).placeholder);}}},options.debounce);var onDragOverEnter=function(e){var element=e.target;var sortableElement=element.isSortable===true?element:findSortable(element,e);element=findDragElement(sortableElement,element);if(!dragging||!listsConnected(sortableElement,dragging.parentElement)||addData(sortableElement,'_disabled')==='true'){return;}
var options=addData(sortableElement,'opts');if(parseInt(options.maxItems)&&filter(sortableElement.children,addData(sortableElement,'items')).length>parseInt(options.maxItems)&&dragging.parentElement!==sortableElement){return;}
e.preventDefault();e.stopPropagation();e.dataTransfer.dropEffect=store(sortableElement).getConfig('copy')===true?'copy':'move';debouncedDragOverEnter(sortableElement,element,e.pageX,e.pageY);};addEventListener(listItems.concat(sortableElement),'dragover',onDragOverEnter);addEventListener(listItems.concat(sortableElement),'dragenter',onDragOverEnter);});return sortableElements;}
sortable.destroy=function(sortableElement){destroySortable(sortableElement);};sortable.enable=function(sortableElement){enableSortable(sortableElement);};sortable.disable=function(sortableElement){disableSortable(sortableElement);};sortable.__testing={data:addData,removeItemEvents:removeItemEvents,removeItemData:removeItemData,removeSortableData:removeSortableData,removeContainerEvents:removeContainerEvents};return sortable;}());